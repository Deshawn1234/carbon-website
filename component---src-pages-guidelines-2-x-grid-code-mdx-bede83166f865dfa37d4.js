"use strict";(self.webpackChunkcarbondesignsystem=self.webpackChunkcarbondesignsystem||[]).push([[51640],{3624:function(e,t,n){n.d(t,{Z:function(){return f}});var a=n(67294),o=n(31304),r=n.n(o),l=n(71082),s=n(67242),i=n(9953),c=n(94184),d=n.n(c);var m=e=>{let{title:t,theme:n,tabs:o=[]}=e;return a.createElement("div",{className:d()("PageHeader-module--page-header--36a7c",{"PageHeader-module--with-tabs--bdb43":o.length,"PageHeader-module--dark-mode--58278":"dark"===n})},a.createElement("div",{className:"cds--grid"},a.createElement("div",{className:"cds--row"},a.createElement("div",{className:"cds--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--12bd8"},t)))))};var p=e=>{let{relativePagePath:t,repository:n}=e;const{site:{siteMetadata:{repository:o}}}=(0,l.useStaticQuery)("1364590287"),{baseUrl:r,subDirectory:s,branch:i}=n||o,c=`${r}/edit/${i}${s}/src/pages${t}`;return r?a.createElement("div",{className:"cds--row EditLink-module--row--04499"},a.createElement("div",{className:"cds--col"},a.createElement("a",{className:"EditLink-module--link--203ae",href:c},"Edit this page on GitHub"))):null},u=n(74703),g=n(51721);let y=function(e){function t(){return e.apply(this,arguments)||this}return(0,g.Z)(t,e),t.prototype.render=function(){const{title:e,tabs:t,slug:n}=this.props,o=n.split("/").filter(Boolean).slice(-1)[0],s=t.map((e=>{const t=r()(e,{lower:!0,strict:!0}),s=t===o,i=new RegExp(`${o}/?(#.*)?$`),c=n.replace(i,t);return a.createElement("li",{key:e,className:d()({"PageTabs-module--selected-item--68107":s},"PageTabs-module--list-item--d36e2")},a.createElement(l.Link,{className:"PageTabs-module--link--2b3ff",to:`${c}`},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--09d7f"},a.createElement("div",{className:"cds--grid"},a.createElement("div",{className:"cds--row"},a.createElement("div",{className:"cds--col-lg-12 cds--col-no-gutter"},a.createElement("nav",{"aria-label":e},a.createElement("ul",{className:"PageTabs-module--list--c4bab"},s))))))},t}(a.Component);var h=y,k=n(37296),b=n(75387),x=n(3732);var T=e=>{let{date:t}=e;const n=new Date(t);return t?a.createElement(x.X2,{className:"last-modified-date-module--row--5c9a1"},a.createElement(x.sg,null,a.createElement("div",{className:"last-modified-date-module--text--a203d"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};var f=e=>{let{pageContext:t,children:n,location:o,Title:c}=e;const{frontmatter:d={},relativePagePath:g,titleType:y}=t,{tabs:x,title:f,theme:C,description:v,keywords:w,date:N}=d,{interiorTheme:E}=(0,b.Z)(),{site:{pathPrefix:M}}=(0,l.useStaticQuery)("2456312558"),S=M?o.pathname.replace(M,""):o.pathname,G=x?S.split("/").filter(Boolean).slice(-1)[0]||r()(x[0],{lower:!0}):"",L=C||E;return a.createElement(i.Z,{tabs:x,homepage:!1,theme:L,pageTitle:f,pageDescription:v,pageKeywords:w,titleType:y},a.createElement(m,{title:c?a.createElement(c,null):f,label:"label",tabs:x,theme:L}),x&&a.createElement(h,{title:f,slug:S,tabs:x,currentTab:G}),a.createElement(k.Z,{padded:!0},n,a.createElement(p,{relativePagePath:g}),a.createElement(T,{date:N})),a.createElement(u.Z,{pageContext:t,location:o,slug:S,tabs:x,currentTab:G}),a.createElement(s.Z,null))}},59856:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return s},default:function(){return x}});var a=n(45987),o=(n(67294),n(3905)),r=n(3624);const l=["components"],s={},i=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},c=i("PageDescription"),d=i("InlineNotification"),m=i("AnchorLinks"),p=i("AnchorLink"),u=i("Row"),g=i("Column"),y=i("ResourceCard"),h=i("MdxIcon"),k={_frontmatter:s},b=r.Z;function x(e){let{components:t}=e,n=(0,a.Z)(e,l);return(0,o.kt)(b,Object.assign({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(c,{mdxType:"PageDescription"},(0,o.kt)("p",null,"The Carbon Grid package helps developers build digital experiences with the 2x\nGrid. The project allows you to use CSS grid to build a variety of layouts.")),(0,o.kt)(d,{mdxType:"InlineNotification"},(0,o.kt)("p",null,"If you’re using ",(0,o.kt)("inlineCode",{parentName:"p"},"@carbon/react"),", you you probably don’t need to install the grid\npackage separately. See our ",(0,o.kt)("a",{parentName:"p",href:"/developing/frameworks/react/"},"Carbon React")," guide\nto start building.")),(0,o.kt)(m,{mdxType:"AnchorLinks"},(0,o.kt)(p,{mdxType:"AnchorLink"},"Documentation"),(0,o.kt)(p,{mdxType:"AnchorLink"},"API & Helpers"),(0,o.kt)(p,{mdxType:"AnchorLink"},"Legacy")),(0,o.kt)("h2",null,"Documentation"),(0,o.kt)("h3",null,"CSS Grid"),(0,o.kt)("p",null,"Carbon provides grid components, using CSS Grid to help developers use the 2x\nGrid. These components include ",(0,o.kt)("inlineCode",{parentName:"p"},"Grid")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Column")," and allow you to define\ncolumn widths by breakpoint, based on a 16 column grid."),(0,o.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,o.kt)(g,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/docs/elements-grid--default",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"react",mdxType:"MdxIcon"}))),(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"CSS Grid demo",href:"https://carbon-elements.netlify.app/grid/examples/css-grid/",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"bee",mdxType:"MdxIcon"})))),(0,o.kt)("h3",null,"AspectRatio"),(0,o.kt)("p",null,"When designing fluid layouts, it’s helpful for an asset or card to be a specific\naspect ratio. The ",(0,o.kt)("inlineCode",{parentName:"p"},"AspectRatio")," component supports rendering your content in a\nspecific aspect ratio through the ratio prop. This allows you to specify the\nproportion between the width and the height of your content."),(0,o.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,o.kt)(g,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/story/components-aspectratio--default",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"react",mdxType:"MdxIcon"}))),(0,o.kt)(g,{colLg:4,colMd:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"Vue",href:"https://vue.carbondesignsystem.com/?path=/story/components-cvaspectratio--default",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"vue",mdxType:"MdxIcon"})))),(0,o.kt)("h2",null,"API & Helpers"),(0,o.kt)("p",null,"There are many ways to make the 2x Grid work for your application using our API.\nThe examples below illustrate two ways of removing visibility of a given\ncomponent based on the breakpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},".component {\n  display: block;\n\n  /* applies styles inside mixin on md breakpoint or below, like max-width */\n  @include breakpoint-down('md') {\n    display: none;\n  }\n}\n\n.component {\n  display: none;\n\n  /* applies styles inside mixin on lg breakpoint and above */\n  @include breakpoint('lg') {\n    display: block;\n  }\n}\n")),(0,o.kt)("p",null,"In addition, you can also use Helpers to control what is being displayed on the\nscreen at a given breakpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"@use '@carbon/styles/scss/utilities/helper-classes';\n\n.my-class {\n  @include helper-classes.hide-at-sm();\n}\n")),(0,o.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"Carbon grid package",href:"https://github.com/carbon-design-system/carbon/tree/main/packages/grid",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"github",mdxType:"MdxIcon"}))),(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"Carbon grid docs API",href:"https://github.com/carbon-design-system/carbon/blob/main/packages/grid/docs/sass.md#api",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"github",mdxType:"MdxIcon"}))),(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"Hide at Breakpoint Helpers on Storybook",href:"https://react.carbondesignsystem.com/?path=/story/helpers-hideatbreakpoint--hide-at-breakpoint",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"react",mdxType:"MdxIcon"})))),(0,o.kt)("h2",null,"Legacy"),(0,o.kt)("h3",null,"Flexbox Grid"),(0,o.kt)("p",null,"The default grid in v11 is based off of CSS Grid, to enable the legacy\n",(0,o.kt)("a",{parentName:"p",href:"https://react.carbondesignsystem.com/?path=/docs/elements-flexgrid--auto-columns"},"FlexGrid"),"\nimplementation, built using Flexbox, you will need to include the following in\nyour Sass files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"@use '@carbon/grid';\n\n// Emit the flex-grid styles\n@include grid.flex-grid();\n")),(0,o.kt)(u,{className:"resource-card-group",mdxType:"Row"},(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"React",href:"https://react.carbondesignsystem.com/?path=/story/elements-flexgrid--auto-columns",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"react",mdxType:"MdxIcon"}))),(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"Angular",href:"https://angular.carbondesignsystem.com/?path=/story/components-grid--basic",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"angular",mdxType:"MdxIcon"}))),(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"Vue",href:"https://vue.carbondesignsystem.com/?path=/story/components-cvgrid--auto-columns",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"vue",mdxType:"MdxIcon"}))),(0,o.kt)(g,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},(0,o.kt)(y,{subTitle:"FlexGrid demo",href:"https://carbon-elements.netlify.app/grid/examples/preview/",mdxType:"ResourceCard"},(0,o.kt)(h,{name:"bee",mdxType:"MdxIcon"})))))}x.isMDXComponent=!0}}]);