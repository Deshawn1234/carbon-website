{
    "componentChunkName": "component---src-pages-components-data-table-code-mdx",
    "path": "/components/data-table/code/",
    "result": {"pageContext":{"frontmatter":{"title":"Data table","description":"The data table component allows for the flexible display and sorting of information.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/data-table/code.mdx","titleType":"prepend","MdxNode":{"id":"f30f9ac6-c104-5542-925b-5a0584f3361b","children":[],"parent":"baf4df70-e0c1-576a-a248-030c53ddaef4","internal":{"content":"---\ntitle: Data table\ndescription:\n  The data table component allows for the flexible display and sorting of\n  information.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport { rowData, headerData } from '../../../data/components/data-table.js';\nimport { TrashCan, Save, Download } from '@carbon/icons-react';\n\n<PageDescription>\n\nPreview the data table component with the React live demo. For detailed code\nusage documentation, see the Storybooks for each framework below.\n\n</PageDescription>\n\n## Documentation\n\n<Row className=\"resource-card-group\">\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"React\"\n    href=\"https://react.carbondesignsystem.com/?path=/story/components-datatable-basic--default\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n</Column>\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n      subTitle=\"Angular (Community)\"\n      href=\"https://angular.carbondesignsystem.com/?path=/story/components-data-table--basic\"\n      >\n\n<MdxIcon name=\"angular\" />\n\n  </ResourceCard>\n</Column>\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n      subTitle=\"Vue (Community)\"\n      href=\"http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--minimal\"\n      >\n\n<MdxIcon name=\"vue\" />\n\n  </ResourceCard>\n</Column>\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n      subTitle=\"Web Components (Community)\"\n      href=\"https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default\"\n      >\n\n<MdxIcon name=\"webcomponents\" />\n\n  </ResourceCard>\n</Column>\n</Row>\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'default-table',\n      label: 'Default',\n    },\n    {\n      id: 'with-selection',\n      label: 'With selection',\n    },\n    {\n      id: 'with-expansion',\n      label: 'With expansion',\n    },\n    {\n      id: 'with-batch-actions',\n      label: 'With batch actions',\n    },\n  ]}\n  scope={{ rowData, headerData, React, TrashCan, Save, Download }}\n>\n  <ComponentVariant\n    id=\"default-table\"\n    knobs={{ DataTable: ['isSortable'], Table: ['size', 'useZebraStyles'] }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--basic',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--minimal',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default',\n    }}\n  >\n    {`<DataTable rows={rowData} headers={headerData}>\n  {({ rows, headers, getHeaderProps, getTableProps }) => (\n    <TableContainer title=\"DataTable\">\n      <Table {...getTableProps()}>\n        <TableHead>\n          <TableRow>\n            {headers.map((header) => (\n              <TableHeader {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              {row.cells.map((cell) => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )}\n</DataTable>`}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"with-selection\"\n    knobs={{ DataTable: ['isSortable'], Table: ['size', 'useZebraStyles'] }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable-selection--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--basic',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default',\n    }}\n  >\n    {`<DataTable rows={rowData} headers={headerData}>\n  {({\n    rows,\n    headers,\n    getHeaderProps,\n    getSelectionProps,\n    getRowProps,\n    getTableProps,\n  }) => (\n    <TableContainer title=\"DataTable with selection\">\n      <Table {...getTableProps()}>\n        <TableHead>\n          <TableRow>\n            <TableSelectAll {...getSelectionProps()} />\n            {headers.map((header) => (\n              <TableHeader {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow {...getRowProps({ row })}>\n              <TableSelectRow {...getSelectionProps({ row })} />\n              {row.cells.map((cell) => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )}\n</DataTable>`}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"with-expansion\"\n    knobs={{ DataTable: ['isSortable'] }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable-expansion--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--with-expansion',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--slotted-expanding-data',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--expandable',\n    }}\n  >\n    {`<DataTable\n  rows={rowData}\n  headers={headerData}>\n    {({ rows, headers, getHeaderProps, getRowProps, getTableProps }) => (\n      <TableContainer title=\"DataTable with expansion\">\n        <Table {...getTableProps()}>\n          <TableHead>\n            <TableRow>\n              <TableExpandHeader />\n              {headers.map(header => (\n                <TableHeader {...getHeaderProps({ header })}>\n                  {header.header}\n                </TableHeader>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <React.Fragment key={row.id}>\n                <TableExpandRow {...getRowProps({ row })}>\n                  {row.cells.map(cell => (\n                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                  ))}\n                </TableExpandRow>\n                {row.isExpanded && (\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>Aux squad rules</p>\n                  </TableExpandedRow>\n                )}\n              </React.Fragment>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )}\n  </DataTable>`}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"with-batch-actions\"\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable-batch-actions--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--with-toolbar',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default',\n    }}\n  >\n    {`<DataTable rows={rowData} headers={headerData}>\n  {({\n    rows,\n    headers,\n    getHeaderProps,\n    getRowProps,\n    getSelectionProps,\n    getBatchActionProps,\n    onInputChange,\n    selectedRows,\n  }) => (\n    <TableContainer title=\"DataTable with batch actions\">\n      <TableToolbar>\n        <TableBatchActions {...getBatchActionProps()}>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            renderIcon={TrashCan}\n            onClick={() => console.log('clicked')}\n          >\n            Delete\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            renderIcon={Save}\n            onClick={() => console.log('clicked')}\n          >\n            Save\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            renderIcon={Download}\n            onClick={() => console.log('clicked')}\n          >\n            Download\n          </TableBatchAction>\n        </TableBatchActions>\n        <TableToolbarContent>\n          <TableToolbarSearch\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onChange={onInputChange}\n          />\n          <TableToolbarMenu\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n          >\n            <TableToolbarAction primaryFocus onClick={() => alert('Alert 1')}>\n              Action 1\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 2')}>\n              Action 2\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 3')}>\n              Action 3\n            </TableToolbarAction>\n          </TableToolbarMenu>\n          <Button\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onClick={() => console.log('clicked')}\n            size=\"small\"\n            kind=\"primary\"\n          >\n            Add new\n          </Button>\n        </TableToolbarContent>\n      </TableToolbar>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableSelectAll {...getSelectionProps()} />\n            {headers.map((header) => (\n              <TableHeader {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow {...getRowProps({ row })}>\n              <TableSelectRow {...getSelectionProps({ row })} />\n              {row.cells.map((cell) => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )}\n</DataTable>`}\n  </ComponentVariant>\n</ComponentDemo>\n\n## Sample data\n\n```javascript\nconst headerData = [\n  {\n    header: 'Name',\n    key: 'name',\n  },\n  {\n    header: 'Protocol',\n    key: 'protocol',\n  },\n  {\n    header: 'Port',\n    key: 'port',\n  },\n  {\n    header: 'Rule',\n    key: 'rule',\n  },\n  {\n    header: 'Attached Groups',\n    key: 'attached_groups',\n  },\n  {\n    header: 'Status',\n    key: 'status',\n  },\n];\n\nconst rowData = [\n  {\n    attached_groups: 'Kevins VM Groups',\n    id: 'a',\n    name: 'Load Balancer 3',\n    port: 3000,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Disabled',\n  },\n  {\n    attached_groups: 'Maureens VM Groups',\n    id: 'b',\n    name: 'Load Balancer 1',\n    port: 443,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Starting',\n  },\n  {\n    attached_groups: 'Andrews VM Groups',\n    id: 'c',\n    name: 'Load Balancer 2',\n    port: 80,\n    protocol: 'HTTP',\n    rule: 'DNS delegation',\n    status: 'Active',\n  },\n  {\n    attached_groups: 'Marcs VM Groups',\n    id: 'd',\n    name: 'Load Balancer 6',\n    port: 3000,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Disabled',\n  },\n  {\n    attached_groups: 'Mels VM Groups',\n    id: 'e',\n    name: 'Load Balancer 4',\n    port: 443,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Starting',\n  },\n  {\n    attached_groups: 'Ronjas VM Groups',\n    id: 'f',\n    name: 'Load Balancer 5',\n    port: 80,\n    protocol: 'HTTP',\n    rule: 'DNS delegation',\n    status: 'Active',\n  },\n];\n```\n","type":"Mdx","contentDigest":"9e85f94810ca76674a69a83ecd07c7c0","owner":"gatsby-plugin-mdx","counter":4172},"frontmatter":{"title":"Data table","description":"The data table component allows for the flexible display and sorting of information.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Data table\ndescription:\n  The data table component allows for the flexible display and sorting of\n  information.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\nimport { rowData, headerData } from '../../../data/components/data-table.js';\nimport { TrashCan, Save, Download } from '@carbon/icons-react';\n\n<PageDescription>\n\nPreview the data table component with the React live demo. For detailed code\nusage documentation, see the Storybooks for each framework below.\n\n</PageDescription>\n\n## Documentation\n\n<Row className=\"resource-card-group\">\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n    subTitle=\"React\"\n    href=\"https://react.carbondesignsystem.com/?path=/story/components-datatable-basic--default\"\n    >\n\n<MdxIcon name=\"react\" />\n\n  </ResourceCard>\n</Column>\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n      subTitle=\"Angular (Community)\"\n      href=\"https://angular.carbondesignsystem.com/?path=/story/components-data-table--basic\"\n      >\n\n<MdxIcon name=\"angular\" />\n\n  </ResourceCard>\n</Column>\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n      subTitle=\"Vue (Community)\"\n      href=\"http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--minimal\"\n      >\n\n<MdxIcon name=\"vue\" />\n\n  </ResourceCard>\n</Column>\n<Column colLg={4} colMd={4} noGutterSm>\n  <ResourceCard\n      subTitle=\"Web Components (Community)\"\n      href=\"https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default\"\n      >\n\n<MdxIcon name=\"webcomponents\" />\n\n  </ResourceCard>\n</Column>\n</Row>\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'default-table',\n      label: 'Default',\n    },\n    {\n      id: 'with-selection',\n      label: 'With selection',\n    },\n    {\n      id: 'with-expansion',\n      label: 'With expansion',\n    },\n    {\n      id: 'with-batch-actions',\n      label: 'With batch actions',\n    },\n  ]}\n  scope={{ rowData, headerData, React, TrashCan, Save, Download }}\n>\n  <ComponentVariant\n    id=\"default-table\"\n    knobs={{ DataTable: ['isSortable'], Table: ['size', 'useZebraStyles'] }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--basic',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--minimal',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default',\n    }}\n  >\n    {`<DataTable rows={rowData} headers={headerData}>\n  {({ rows, headers, getHeaderProps, getTableProps }) => (\n    <TableContainer title=\"DataTable\">\n      <Table {...getTableProps()}>\n        <TableHead>\n          <TableRow>\n            {headers.map((header) => (\n              <TableHeader {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              {row.cells.map((cell) => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )}\n</DataTable>`}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"with-selection\"\n    knobs={{ DataTable: ['isSortable'], Table: ['size', 'useZebraStyles'] }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable-selection--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--basic',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default',\n    }}\n  >\n    {`<DataTable rows={rowData} headers={headerData}>\n  {({\n    rows,\n    headers,\n    getHeaderProps,\n    getSelectionProps,\n    getRowProps,\n    getTableProps,\n  }) => (\n    <TableContainer title=\"DataTable with selection\">\n      <Table {...getTableProps()}>\n        <TableHead>\n          <TableRow>\n            <TableSelectAll {...getSelectionProps()} />\n            {headers.map((header) => (\n              <TableHeader {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow {...getRowProps({ row })}>\n              <TableSelectRow {...getSelectionProps({ row })} />\n              {row.cells.map((cell) => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )}\n</DataTable>`}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"with-expansion\"\n    knobs={{ DataTable: ['isSortable'] }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable-expansion--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--with-expansion',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--slotted-expanding-data',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--expandable',\n    }}\n  >\n    {`<DataTable\n  rows={rowData}\n  headers={headerData}>\n    {({ rows, headers, getHeaderProps, getRowProps, getTableProps }) => (\n      <TableContainer title=\"DataTable with expansion\">\n        <Table {...getTableProps()}>\n          <TableHead>\n            <TableRow>\n              <TableExpandHeader />\n              {headers.map(header => (\n                <TableHeader {...getHeaderProps({ header })}>\n                  {header.header}\n                </TableHeader>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <React.Fragment key={row.id}>\n                <TableExpandRow {...getRowProps({ row })}>\n                  {row.cells.map(cell => (\n                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                  ))}\n                </TableExpandRow>\n                {row.isExpanded && (\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>Aux squad rules</p>\n                  </TableExpandedRow>\n                )}\n              </React.Fragment>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )}\n  </DataTable>`}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"with-batch-actions\"\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-datatable-batch-actions--usage',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-table--with-toolbar',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvdatatable--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-data-table--default',\n    }}\n  >\n    {`<DataTable rows={rowData} headers={headerData}>\n  {({\n    rows,\n    headers,\n    getHeaderProps,\n    getRowProps,\n    getSelectionProps,\n    getBatchActionProps,\n    onInputChange,\n    selectedRows,\n  }) => (\n    <TableContainer title=\"DataTable with batch actions\">\n      <TableToolbar>\n        <TableBatchActions {...getBatchActionProps()}>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            renderIcon={TrashCan}\n            onClick={() => console.log('clicked')}\n          >\n            Delete\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            renderIcon={Save}\n            onClick={() => console.log('clicked')}\n          >\n            Save\n          </TableBatchAction>\n          <TableBatchAction\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? 0 : -1}\n            renderIcon={Download}\n            onClick={() => console.log('clicked')}\n          >\n            Download\n          </TableBatchAction>\n        </TableBatchActions>\n        <TableToolbarContent>\n          <TableToolbarSearch\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onChange={onInputChange}\n          />\n          <TableToolbarMenu\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n          >\n            <TableToolbarAction primaryFocus onClick={() => alert('Alert 1')}>\n              Action 1\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 2')}>\n              Action 2\n            </TableToolbarAction>\n            <TableToolbarAction onClick={() => alert('Alert 3')}>\n              Action 3\n            </TableToolbarAction>\n          </TableToolbarMenu>\n          <Button\n            tabIndex={getBatchActionProps().shouldShowBatchActions ? -1 : 0}\n            onClick={() => console.log('clicked')}\n            size=\"small\"\n            kind=\"primary\"\n          >\n            Add new\n          </Button>\n        </TableToolbarContent>\n      </TableToolbar>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableSelectAll {...getSelectionProps()} />\n            {headers.map((header) => (\n              <TableHeader {...getHeaderProps({ header })}>\n                {header.header}\n              </TableHeader>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow {...getRowProps({ row })}>\n              <TableSelectRow {...getSelectionProps({ row })} />\n              {row.cells.map((cell) => (\n                <TableCell key={cell.id}>{cell.value}</TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )}\n</DataTable>`}\n  </ComponentVariant>\n</ComponentDemo>\n\n## Sample data\n\n```javascript\nconst headerData = [\n  {\n    header: 'Name',\n    key: 'name',\n  },\n  {\n    header: 'Protocol',\n    key: 'protocol',\n  },\n  {\n    header: 'Port',\n    key: 'port',\n  },\n  {\n    header: 'Rule',\n    key: 'rule',\n  },\n  {\n    header: 'Attached Groups',\n    key: 'attached_groups',\n  },\n  {\n    header: 'Status',\n    key: 'status',\n  },\n];\n\nconst rowData = [\n  {\n    attached_groups: 'Kevins VM Groups',\n    id: 'a',\n    name: 'Load Balancer 3',\n    port: 3000,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Disabled',\n  },\n  {\n    attached_groups: 'Maureens VM Groups',\n    id: 'b',\n    name: 'Load Balancer 1',\n    port: 443,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Starting',\n  },\n  {\n    attached_groups: 'Andrews VM Groups',\n    id: 'c',\n    name: 'Load Balancer 2',\n    port: 80,\n    protocol: 'HTTP',\n    rule: 'DNS delegation',\n    status: 'Active',\n  },\n  {\n    attached_groups: 'Marcs VM Groups',\n    id: 'd',\n    name: 'Load Balancer 6',\n    port: 3000,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Disabled',\n  },\n  {\n    attached_groups: 'Mels VM Groups',\n    id: 'e',\n    name: 'Load Balancer 4',\n    port: 443,\n    protocol: 'HTTP',\n    rule: 'Round robin',\n    status: 'Starting',\n  },\n  {\n    attached_groups: 'Ronjas VM Groups',\n    id: 'f',\n    name: 'Load Balancer 5',\n    port: 80,\n    protocol: 'HTTP',\n    rule: 'DNS delegation',\n    status: 'Active',\n  },\n];\n```\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/data-table/code.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}