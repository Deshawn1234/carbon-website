{
    "componentChunkName": "component---src-pages-components-text-input-usage-mdx",
    "path": "/components/text-input/usage/",
    "result": {"pageContext":{"frontmatter":{"title":"Text input","description":"Text inputs enable the user to interact with and input content and data. This component can be used for long and short form entries.","tabs":["Usage","Style","Code","Accessibility"]},"relativePagePath":"/components/text-input/usage.mdx","titleType":"prepend","MdxNode":{"id":"c0bca63e-d7ce-52ab-a254-55b2e6bfd406","children":[],"parent":"18685607-0dee-5c81-9528-f8df43b9b018","internal":{"content":"---\ntitle: Text input\ndescription:\n  Text inputs enable the user to interact with and input content and data. This\n  component can be used for long and short form entries.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nText inputs enable users to enter free-form text data. You can use them for long\nand short-form entries.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Text input</AnchorLink>\n<AnchorLink>Text area</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nText inputs enable users to enter free-form text data. The type of text field\nused should reflect the length of the content you expect the user to enter. The\ndefault text input is for short, one-line content, whereas text area is for\nlonger, multi-line entries.\n\n#### When to use\n\n- A user needs to input unique information that cannot be predicted with a\n  preset of options.\n- A user needs to input memorable data that can be entered more quickly in a\n  free-hand format versus a more complex control.\n\n#### When not to use\n\n- If a user can only enter an option from a predefined list then avoid using a\n  free-form text input as it is likely to result in an error. Consider using a\n  selection control such as a dropdown, select, or radio button group instead.\n\n### Variants\n\n| Variant                                                | Purpose                                                                               |\n| ------------------------------------------------------ | ------------------------------------------------------------------------------------- |\n| [Text input](/components/text-input/usage/#text-input) | When the expected user input is a single line of text.                                |\n| [Text area](/components/text-input/usage/#text-area)   | When the expected user input is more than a few words that could span multiple lines. |\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'text-input',\n      label: 'Text input',\n    },\n    {\n      id: 'password-input',\n      label: 'Password input',\n    },\n    {\n      id: 'text-area',\n      label: 'Text area',\n    },\n  ]}\n>\n  <ComponentVariant\n    id=\"text-input\"\n    knobs={{\n      TextInput: ['disabled', 'invalid', 'light'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-textinput--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-input--label',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvtextinput--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-input--default',\n    }}\n  >\n    {`\n    <div>\n      <TextInput\n        helperText=\"Optional helper text\"\n        id=\"test2\"\n        invalidText=\"A valid value is required\"\n        labelText=\"Text input label\"\n        placeholder=\"Placeholder text\"\n      />\n    </div>\n  `}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"password-input\"\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-textinput--toggle-password-visibility',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-input--label',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvtextinput--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-input--default',\n    }}\n  >\n    {`\n    <div>\n    <TextInput.PasswordInput\n      helperText=\"Optional helper text\"\n      hidePasswordLabel=\"Hide password\"\n      id=\"test2\"\n      invalidText=\"A valid value is required\"\n      labelText=\"Text input label\"\n      placeholder=\"Placeholder text\"\n      showPasswordLabel=\"Show password\"\n    />\n    </div>\n  `}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"text-area\"\n    knobs={{\n      TextArea: ['disabled', 'invalid', 'light'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-textarea--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-input--textarea',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvtextarea--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-textarea--default',\n    }}\n  >\n    {`\n    <div>\n    <TextArea\n      cols={50}\n      helperText=\"Optional helper text\"\n      id=\"test2\"\n      invalidText=\"A valid value is required\"\n      labelText=\"Text area label\"\n      placeholder=\"Placeholder text\"\n      rows={4}\n    />\n    </div>\n  `}\n  </ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Text input anatomy](images/text-input-usage-anatomy.png)\n\n</Column>\n</Row>\n\n1. **Label**: Text that informs the user about the content they need to enter in\n   the field. It is required unless you get an approved accessibility exemption.\n2. **Value**: The content the user has entered into the field.\n3. **Helper text** (optional): Assistive text that can provide additional aid or\n   context to the user. Often used to explain the correct data format.\n4. **Field**: The container in which a user enters data. Must meet 3:1 non-text\n   contrast requirements.\n5. **Input requirement** (optional): This label indicates if the field is\n   optional or required for the user to complete.\n6. **Character counter** (text area only): Indicate the number of characters\n   being entered and the total number of characters allowed.\n7. **Resize handle** (text area only): Allows a user to manipulate the field\n   height by making it longer or shorter.\n\n### Sizing\n\n#### Text input heights\n\nThere are three text input height sizes: small, medium, and large. Supporting\nthree sizes gives you more flexibility in structuring layouts. Be sure to use a\nconsistent field height when pairing form components on the same page.\n\n| Size        | Height (px/rem) | Use case                                                                                                                                            |\n| ----------- | --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Small (sm)  | 32 / 2          | Use when space is constricted or when placing a text input in a form that is long and complex.                                                      |\n| Medium (md) | 40 / 2.5        | This is the default size and the most commonly used size. When in doubt, use the medium size.                                                       |\n| Large (lg)  | 48 / 3          | Use when there is a lot of space to work with. The large size is typically used in simple forms or when a text input is placed by itself on a page. |\n\n<Row>\n<Column colLg={8}>\n\n![Text input heights](images/text-input-usage-size.png)\n\n</Column>\n</Row>\n\n#### Text area height\n\nText area has a variable height that can be lengthened or shortened by the user\nusing the `resize` handle in the bottom right of the field. By default, text\narea has a minimum height of 40px/2.5rem but no maximum height.\n\n<Row>\n<Column colLg={12}>\n\n![Text input heights](images/text-area-usage-size.png)\n\n</Column>\n</Row>\n\n#### Widths\n\nThe field widths of both text input and text area should reflect the intended\nlength of the content while still aligning to the grid columns or mini unit\ngrid. Unlike the height, the width of the text area cannot be controlled by the\nuser. There are no minimum or maximum widths but you should avoid excessively\nwide fields that are disproportionate to the intended data being collected.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do make text input widths proportional to the content and align to grid columns.\">\n\n![Do use proportional widths](images/text-input-width-do.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not make text inputs excessively wide just to fill in space.Â \">\n\n![Do not make inputs excessively wide.](images/text-input-width-dont.png)\n\n  </DoDont>\n</DoDontRow>\n\n### Alignment\n\nLabels and field containers should vertically align to the grid and with other\nform components on a page.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do align field containers to the grid.\">\n\n![Do align field containers to the grid.](images/text-input-usage-4-do.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not align field text to the grid and hang the field in the gutter.\">\n\n![Do not align field text to the grid and hang the field in the gutter.](images/text-input-usage-4-dont.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Content\n\n### Main elements\n\n#### Labels\n\nEffective labeling helps users understand what information to enter into a text\ninput. Text fields should always have a label. There are rare instances were the\ncontext of an input negates the need for a visible label but we advise you\nconsult an accessibility expert before proceeding with a label-less design.\n\n- Use sentence-style capitalization for all labels, except for product names and\n  proper nouns.\n- Keep the label short and concise.\n- Labels should clearly state the requirement status.\n- Do not use colons after label names.\n\n#### Helper text\n\nOptional helper text is pertinent information that assists the user in correctly\ncompleting a field. It is often used to explain the correct data format.\n\n- Use sentence-style capitalization, and in most cases, write the text as full\n  sentences with punctuation.\n- Helper text is an optional feature and can be used in place of a tooltip.\n- When used, helper text is always available when the input is focused and\n  appears underneath the field. The exceptions are when an error or warning\n  message replaces the helper text.\n\n#### Placeholder text\n\nOptional placeholder text provides hints or examples of what to enter.\nPlaceholder text disappears after the user begins entering data into the input\nand should not contain crucial information.\n\n- Use sentence-style capitalization, and in most cases, write the text as a\n  direct statement without punctuation.\n- Placeholder text is not required and by default not shown in text input\n  fields.\n- Placeholder text can be harmful to user interactions and should only be added\n  when necessary.\n\n#### Accessibility best practices\n\n- Labels must be announced to the screen reader on focus.\n- Ensure the helper text that appears under an input is read when an assistive\n  technology user stops at an input using ARIA.\n\n### Overflow content\n\n#### Overflow in a text input\n\nIf a user's content is unexpectedly too long for the single line of a text input\nthen the value content can horizontally scroll inside the field container when\nmoving the cursor from one end of the value to the other.\n\n#### Overflow in a text area\n\nIf a user's content exceeds the vertical space of the variable text area then a\nuser can either expand the field container using the resize handle or they can\nvertically scroll the content inside the set field container.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Universal behaviors\n\nThe behaviors listed in this section are universal across all variants. For\nbehaviors that are unique to each variant, see each of the component variant\nsections below.\n\n### States\n\n| State       | When to use                                                                                                                                                                                                                                                       |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| _Enabled_   | When a text input is live but a user is not directly interacting with it. This is commonly referred to as the default or normal state of the component. An enabled text input field can contain no content, placeholder text, or user generate content.           |\n| _Active_    | When a user is actively typing content into the field.                                                                                                                                                                                                            |\n| _Focus_     | When a user `tabs` to or clicks on the text input, it becomes focused, indicating the user has successfully navigated to the component.                                                                                                                           |\n| _Error_     | When the user input is invalid or a required text input has not been filled in. It can also be triggered due to a system error. This state requires a user response before data can be submitted or saved.                                                        |\n| _Warning_   | When you need to call the user's attention to an exception condition. The condition might not be an error but can cause problems if not resolved.                                                                                                                 |\n| _Disabled_  | When the user is not allowed to interact with the text input due to either permissions, dependencies, or pre-requisites. The disabled state completely removes the interactive function from a component. The styling is not subject to WCAG contrast compliance. |\n| _Skeleton_  | Use on an initial page load to indicate that the text input has not yet fully loaded.                                                                                                                                                                             |\n| _Read-only_ | _Coming soon!_                                                                                                                                                                                                                                                    |\n\n<Row>\n<Column colLg={12}>\n\n![Text input states](images/text-input-states.png)\n\n</Column>\n</Row>\n\n### Validation\n\nReal-time validation helps streamline the process and keep data clean when the\nuser fills out forms. Otherwise, validate the text input data when the user\nsubmits the associated form. For complete guidance on error and validation, see\nthe [form pattern](https://carbondesignsystem.com/patterns/forms-pattern/).\n\n#### Invalid\n\nAn error state is triggered if the data is invalid or a required field is left\nempty. Error states have three visual indicators to signify invalid content: a\nred border, an error icon indicator, and an error message.\n\n<Row>\n<Column colLg={8}>\n\n![Example of an error state being triggered](images/text-input-usage-2.gif)\n\n</Column>\n</Row>\n\n### Default values\n\nWhere possible, add programmatic assistance. Detect and pre-fill inputs to\nreduce errors and save time. When the software canât determine the value that\nbelongs in an input, use type-ahead to make suggestions. Use sentence-case for\ndefault values, detected values, and auto-completion text.\n\n### Required vs. optional\n\nText inputs can be labeled as either optional or required depending on the\ndepending on the circumstance. For more guidance on requirement labeling, see\nthe [form pattern](/patterns/forms-pattern/#optional-vs.-mandatory).\n\n<DoDontRow>\n<DoDont\ntype=\"do\"\ncolMd={4} colLg={4}\ncaption=\"If the majority of the fields are required, mark only the optional field labels with (optional).\">\n\n![Example showing optional field indicator](./images/text-input-usage-optional-do.png)\n\n</DoDont>\n<DoDont\ntype=\"do\"\ncolMd={4} colLg={4}\ncaption=\"If the majority of the fields are optional, mark only the required field labels with (required).\">\n\n![Example showing required field indicator](./images/text-input-usage-required-do.png)\n\n</DoDont>\n</DoDontRow>\n\n### Interactions\n\n#### Mouse\n\nUsers can activate a text input by clicking on the field container. A separate\nclick is required to activate any additional actions associated with the text\ninput such as a tooltip or password visibility toggle.\n\n<Row>\n<Column colLg={8}>\n\n![Example showing click target areas for text input](images/text-input-usage-mouse.png)\n\n</Column>\n</Row>\n\n#### Keyboard\n\nFor additional keyboard interactions, see the\n[accessibility tab](/components/text-input/accessibility).\n\n| Key                                   | Interaction                                                                            |\n| ------------------------------------- | -------------------------------------------------------------------------------------- |\n| _Tab_                                 | Brings focus to the text input.                                                        |\n| _Enter_ or _Space_                    | Opens any associated actions added to the input, such as a password visibility toggle. |\n| _Esc_                                 | Closes any associated actions added to the input.                                      |\n| _ctrl_ or _opt_ + _left/right arrows_ | Moves you word by word inside the field.                                               |\n| _ctrl_ or _opt_ + _up/down arrows_    | Relocates you to the start or end of the input content.                                |\n\n## Text input\n\nUse a text input when the expected user input is a single line of text. Text\ninputs have a fixed height and are used as a simple free-form data entry. Users\ncan enter any combination of letters, numbers, or symbols.\n\n<Row>\n<Column colLg={8}>\n\n![Example of text input in context](images/text-input-usage-1.png)\n\n</Column>\n</Row>\n\n### Password input\n\nPassword input is a sub-variant of text input. It is used to collect private\ndata and will hide the characters as a user enters them. A user can choose to\ntoggle on the character visibility by clicking the view icon on the far right of\nthe input field. When using a password input be sure to provide detailed helper\ntext listing any requirements related to the data format, such as types of\ncharacters allowed or date structure.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a password input](images/text-input-usage-password.png)\n\n</Column>\n</Row>\n\n## Text area\n\nUse a text area when the expected user input is more than a few words and could\nspan multiple lines. It is commonly used for features like user commentary or\ndescriptions. It supports all the same states and functionality as text input\nexcept for the password functionality. Text area has several unique\nfunctionalities not included in the default text input, like the resize handle\nand character counter.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a text area](images/text-input-usage-2.png)\n\n</Column>\n</Row>\n\n### Resize handle\n\nIncluded by default in text area is the `resize` handle. It allows a user to\nmanipulate the field height by making it longer or shorter. The resize handle\nhas no effect on the width of the text area container, it only effects the\nheight. If the user makes the field size shorter than the content inside the\nfield then a vertical scroll will become available.\n\n<Row>\n<Column colLg={8}>\n\n![Example showing the resize handle in text area](images/text-area-usage-resize.png)\n\n</Column>\n</Row>\n\n### Character counter\n\nA character counter can be added to text area to indicate both the number of\ncharacters being entered and the total number of characters allowed. Once the\nmax number of characters is reached the text area should prevent the user from\nentering any additional character and provide messaging to the user that a limit\nhas been met.\n\n<Row>\n<Column colLg={8}>\n\n![Example showing a character counter in text area](images/text-area-usage-counter.png)\n\n</Column>\n</Row>\n\n## References\n\n- Katie Sherwin,\n  [Placeholders in Form Fields Are Harmful](https://www.nngroup.com/articles/form-design-placeholders/)\n  (Nielsen Norman Group, 2018)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","type":"Mdx","contentDigest":"11abf904251caff6267e3e9bb28682d0","owner":"gatsby-plugin-mdx","counter":4267},"frontmatter":{"title":"Text input","description":"Text inputs enable the user to interact with and input content and data. This component can be used for long and short form entries.","tabs":["Usage","Style","Code","Accessibility"]},"exports":{},"rawBody":"---\ntitle: Text input\ndescription:\n  Text inputs enable the user to interact with and input content and data. This\n  component can be used for long and short form entries.\ntabs: ['Usage', 'Style', 'Code', 'Accessibility']\n---\n\n<PageDescription>\n\nText inputs enable users to enter free-form text data. You can use them for long\nand short-form entries.\n\n</PageDescription>\n\n<AnchorLinks>\n\n<AnchorLink>Overview</AnchorLink>\n<AnchorLink>Live demo</AnchorLink>\n<AnchorLink>Formatting</AnchorLink>\n<AnchorLink>Content</AnchorLink>\n<AnchorLink>Universal behaviors</AnchorLink>\n<AnchorLink>Text input</AnchorLink>\n<AnchorLink>Text area</AnchorLink>\n<AnchorLink>References</AnchorLink>\n<AnchorLink>Feedback</AnchorLink>\n\n</AnchorLinks>\n\n## Overview\n\nText inputs enable users to enter free-form text data. The type of text field\nused should reflect the length of the content you expect the user to enter. The\ndefault text input is for short, one-line content, whereas text area is for\nlonger, multi-line entries.\n\n#### When to use\n\n- A user needs to input unique information that cannot be predicted with a\n  preset of options.\n- A user needs to input memorable data that can be entered more quickly in a\n  free-hand format versus a more complex control.\n\n#### When not to use\n\n- If a user can only enter an option from a predefined list then avoid using a\n  free-form text input as it is likely to result in an error. Consider using a\n  selection control such as a dropdown, select, or radio button group instead.\n\n### Variants\n\n| Variant                                                | Purpose                                                                               |\n| ------------------------------------------------------ | ------------------------------------------------------------------------------------- |\n| [Text input](/components/text-input/usage/#text-input) | When the expected user input is a single line of text.                                |\n| [Text area](/components/text-input/usage/#text-area)   | When the expected user input is more than a few words that could span multiple lines. |\n\n## Live demo\n\n<ComponentDemo\n  components={[\n    {\n      id: 'text-input',\n      label: 'Text input',\n    },\n    {\n      id: 'password-input',\n      label: 'Password input',\n    },\n    {\n      id: 'text-area',\n      label: 'Text area',\n    },\n  ]}\n>\n  <ComponentVariant\n    id=\"text-input\"\n    knobs={{\n      TextInput: ['disabled', 'invalid', 'light'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-textinput--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-input--label',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvtextinput--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-input--default',\n    }}\n  >\n    {`\n    <div>\n      <TextInput\n        helperText=\"Optional helper text\"\n        id=\"test2\"\n        invalidText=\"A valid value is required\"\n        labelText=\"Text input label\"\n        placeholder=\"Placeholder text\"\n      />\n    </div>\n  `}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"password-input\"\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-textinput--toggle-password-visibility',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-input--label',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvtextinput--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-input--default',\n    }}\n  >\n    {`\n    <div>\n    <TextInput.PasswordInput\n      helperText=\"Optional helper text\"\n      hidePasswordLabel=\"Hide password\"\n      id=\"test2\"\n      invalidText=\"A valid value is required\"\n      labelText=\"Text input label\"\n      placeholder=\"Placeholder text\"\n      showPasswordLabel=\"Show password\"\n    />\n    </div>\n  `}\n  </ComponentVariant>\n  <ComponentVariant\n    id=\"text-area\"\n    knobs={{\n      TextArea: ['disabled', 'invalid', 'light'],\n    }}\n    links={{\n      React:\n        'https://react.carbondesignsystem.com/?path=/story/components-textarea--default',\n      Angular:\n        'https://angular.carbondesignsystem.com/?path=/story/components-input--textarea',\n      Vue: 'http://vue.carbondesignsystem.com/?path=/story/components-cvtextarea--default',\n      'Web Components':\n        'https://web-components.carbondesignsystem.com/?path=/story/components-textarea--default',\n    }}\n  >\n    {`\n    <div>\n    <TextArea\n      cols={50}\n      helperText=\"Optional helper text\"\n      id=\"test2\"\n      invalidText=\"A valid value is required\"\n      labelText=\"Text area label\"\n      placeholder=\"Placeholder text\"\n      rows={4}\n    />\n    </div>\n  `}\n  </ComponentVariant>\n</ComponentDemo>\n\n## Formatting\n\n### Anatomy\n\n<Row>\n<Column colLg={8}>\n\n![Text input anatomy](images/text-input-usage-anatomy.png)\n\n</Column>\n</Row>\n\n1. **Label**: Text that informs the user about the content they need to enter in\n   the field. It is required unless you get an approved accessibility exemption.\n2. **Value**: The content the user has entered into the field.\n3. **Helper text** (optional): Assistive text that can provide additional aid or\n   context to the user. Often used to explain the correct data format.\n4. **Field**: The container in which a user enters data. Must meet 3:1 non-text\n   contrast requirements.\n5. **Input requirement** (optional): This label indicates if the field is\n   optional or required for the user to complete.\n6. **Character counter** (text area only): Indicate the number of characters\n   being entered and the total number of characters allowed.\n7. **Resize handle** (text area only): Allows a user to manipulate the field\n   height by making it longer or shorter.\n\n### Sizing\n\n#### Text input heights\n\nThere are three text input height sizes: small, medium, and large. Supporting\nthree sizes gives you more flexibility in structuring layouts. Be sure to use a\nconsistent field height when pairing form components on the same page.\n\n| Size        | Height (px/rem) | Use case                                                                                                                                            |\n| ----------- | --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Small (sm)  | 32 / 2          | Use when space is constricted or when placing a text input in a form that is long and complex.                                                      |\n| Medium (md) | 40 / 2.5        | This is the default size and the most commonly used size. When in doubt, use the medium size.                                                       |\n| Large (lg)  | 48 / 3          | Use when there is a lot of space to work with. The large size is typically used in simple forms or when a text input is placed by itself on a page. |\n\n<Row>\n<Column colLg={8}>\n\n![Text input heights](images/text-input-usage-size.png)\n\n</Column>\n</Row>\n\n#### Text area height\n\nText area has a variable height that can be lengthened or shortened by the user\nusing the `resize` handle in the bottom right of the field. By default, text\narea has a minimum height of 40px/2.5rem but no maximum height.\n\n<Row>\n<Column colLg={12}>\n\n![Text input heights](images/text-area-usage-size.png)\n\n</Column>\n</Row>\n\n#### Widths\n\nThe field widths of both text input and text area should reflect the intended\nlength of the content while still aligning to the grid columns or mini unit\ngrid. Unlike the height, the width of the text area cannot be controlled by the\nuser. There are no minimum or maximum widths but you should avoid excessively\nwide fields that are disproportionate to the intended data being collected.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do make text input widths proportional to the content and align to grid columns.\">\n\n![Do use proportional widths](images/text-input-width-do.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not make text inputs excessively wide just to fill in space.Â \">\n\n![Do not make inputs excessively wide.](images/text-input-width-dont.png)\n\n  </DoDont>\n</DoDontRow>\n\n### Alignment\n\nLabels and field containers should vertically align to the grid and with other\nform components on a page.\n\n<DoDontRow>\n  <DoDont type=\"do\" caption=\"Do align field containers to the grid.\">\n\n![Do align field containers to the grid.](images/text-input-usage-4-do.png)\n\n  </DoDont>\n  <DoDont type=\"dont\" caption=\"Do not align field text to the grid and hang the field in the gutter.\">\n\n![Do not align field text to the grid and hang the field in the gutter.](images/text-input-usage-4-dont.png)\n\n  </DoDont>\n</DoDontRow>\n\n## Content\n\n### Main elements\n\n#### Labels\n\nEffective labeling helps users understand what information to enter into a text\ninput. Text fields should always have a label. There are rare instances were the\ncontext of an input negates the need for a visible label but we advise you\nconsult an accessibility expert before proceeding with a label-less design.\n\n- Use sentence-style capitalization for all labels, except for product names and\n  proper nouns.\n- Keep the label short and concise.\n- Labels should clearly state the requirement status.\n- Do not use colons after label names.\n\n#### Helper text\n\nOptional helper text is pertinent information that assists the user in correctly\ncompleting a field. It is often used to explain the correct data format.\n\n- Use sentence-style capitalization, and in most cases, write the text as full\n  sentences with punctuation.\n- Helper text is an optional feature and can be used in place of a tooltip.\n- When used, helper text is always available when the input is focused and\n  appears underneath the field. The exceptions are when an error or warning\n  message replaces the helper text.\n\n#### Placeholder text\n\nOptional placeholder text provides hints or examples of what to enter.\nPlaceholder text disappears after the user begins entering data into the input\nand should not contain crucial information.\n\n- Use sentence-style capitalization, and in most cases, write the text as a\n  direct statement without punctuation.\n- Placeholder text is not required and by default not shown in text input\n  fields.\n- Placeholder text can be harmful to user interactions and should only be added\n  when necessary.\n\n#### Accessibility best practices\n\n- Labels must be announced to the screen reader on focus.\n- Ensure the helper text that appears under an input is read when an assistive\n  technology user stops at an input using ARIA.\n\n### Overflow content\n\n#### Overflow in a text input\n\nIf a user's content is unexpectedly too long for the single line of a text input\nthen the value content can horizontally scroll inside the field container when\nmoving the cursor from one end of the value to the other.\n\n#### Overflow in a text area\n\nIf a user's content exceeds the vertical space of the variable text area then a\nuser can either expand the field container using the resize handle or they can\nvertically scroll the content inside the set field container.\n\n### Further guidance\n\nFor further content guidance, see Carbon's\n[content guidelines](/guidelines/content/overview).\n\n## Universal behaviors\n\nThe behaviors listed in this section are universal across all variants. For\nbehaviors that are unique to each variant, see each of the component variant\nsections below.\n\n### States\n\n| State       | When to use                                                                                                                                                                                                                                                       |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| _Enabled_   | When a text input is live but a user is not directly interacting with it. This is commonly referred to as the default or normal state of the component. An enabled text input field can contain no content, placeholder text, or user generate content.           |\n| _Active_    | When a user is actively typing content into the field.                                                                                                                                                                                                            |\n| _Focus_     | When a user `tabs` to or clicks on the text input, it becomes focused, indicating the user has successfully navigated to the component.                                                                                                                           |\n| _Error_     | When the user input is invalid or a required text input has not been filled in. It can also be triggered due to a system error. This state requires a user response before data can be submitted or saved.                                                        |\n| _Warning_   | When you need to call the user's attention to an exception condition. The condition might not be an error but can cause problems if not resolved.                                                                                                                 |\n| _Disabled_  | When the user is not allowed to interact with the text input due to either permissions, dependencies, or pre-requisites. The disabled state completely removes the interactive function from a component. The styling is not subject to WCAG contrast compliance. |\n| _Skeleton_  | Use on an initial page load to indicate that the text input has not yet fully loaded.                                                                                                                                                                             |\n| _Read-only_ | _Coming soon!_                                                                                                                                                                                                                                                    |\n\n<Row>\n<Column colLg={12}>\n\n![Text input states](images/text-input-states.png)\n\n</Column>\n</Row>\n\n### Validation\n\nReal-time validation helps streamline the process and keep data clean when the\nuser fills out forms. Otherwise, validate the text input data when the user\nsubmits the associated form. For complete guidance on error and validation, see\nthe [form pattern](https://carbondesignsystem.com/patterns/forms-pattern/).\n\n#### Invalid\n\nAn error state is triggered if the data is invalid or a required field is left\nempty. Error states have three visual indicators to signify invalid content: a\nred border, an error icon indicator, and an error message.\n\n<Row>\n<Column colLg={8}>\n\n![Example of an error state being triggered](images/text-input-usage-2.gif)\n\n</Column>\n</Row>\n\n### Default values\n\nWhere possible, add programmatic assistance. Detect and pre-fill inputs to\nreduce errors and save time. When the software canât determine the value that\nbelongs in an input, use type-ahead to make suggestions. Use sentence-case for\ndefault values, detected values, and auto-completion text.\n\n### Required vs. optional\n\nText inputs can be labeled as either optional or required depending on the\ndepending on the circumstance. For more guidance on requirement labeling, see\nthe [form pattern](/patterns/forms-pattern/#optional-vs.-mandatory).\n\n<DoDontRow>\n<DoDont\ntype=\"do\"\ncolMd={4} colLg={4}\ncaption=\"If the majority of the fields are required, mark only the optional field labels with (optional).\">\n\n![Example showing optional field indicator](./images/text-input-usage-optional-do.png)\n\n</DoDont>\n<DoDont\ntype=\"do\"\ncolMd={4} colLg={4}\ncaption=\"If the majority of the fields are optional, mark only the required field labels with (required).\">\n\n![Example showing required field indicator](./images/text-input-usage-required-do.png)\n\n</DoDont>\n</DoDontRow>\n\n### Interactions\n\n#### Mouse\n\nUsers can activate a text input by clicking on the field container. A separate\nclick is required to activate any additional actions associated with the text\ninput such as a tooltip or password visibility toggle.\n\n<Row>\n<Column colLg={8}>\n\n![Example showing click target areas for text input](images/text-input-usage-mouse.png)\n\n</Column>\n</Row>\n\n#### Keyboard\n\nFor additional keyboard interactions, see the\n[accessibility tab](/components/text-input/accessibility).\n\n| Key                                   | Interaction                                                                            |\n| ------------------------------------- | -------------------------------------------------------------------------------------- |\n| _Tab_                                 | Brings focus to the text input.                                                        |\n| _Enter_ or _Space_                    | Opens any associated actions added to the input, such as a password visibility toggle. |\n| _Esc_                                 | Closes any associated actions added to the input.                                      |\n| _ctrl_ or _opt_ + _left/right arrows_ | Moves you word by word inside the field.                                               |\n| _ctrl_ or _opt_ + _up/down arrows_    | Relocates you to the start or end of the input content.                                |\n\n## Text input\n\nUse a text input when the expected user input is a single line of text. Text\ninputs have a fixed height and are used as a simple free-form data entry. Users\ncan enter any combination of letters, numbers, or symbols.\n\n<Row>\n<Column colLg={8}>\n\n![Example of text input in context](images/text-input-usage-1.png)\n\n</Column>\n</Row>\n\n### Password input\n\nPassword input is a sub-variant of text input. It is used to collect private\ndata and will hide the characters as a user enters them. A user can choose to\ntoggle on the character visibility by clicking the view icon on the far right of\nthe input field. When using a password input be sure to provide detailed helper\ntext listing any requirements related to the data format, such as types of\ncharacters allowed or date structure.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a password input](images/text-input-usage-password.png)\n\n</Column>\n</Row>\n\n## Text area\n\nUse a text area when the expected user input is more than a few words and could\nspan multiple lines. It is commonly used for features like user commentary or\ndescriptions. It supports all the same states and functionality as text input\nexcept for the password functionality. Text area has several unique\nfunctionalities not included in the default text input, like the resize handle\nand character counter.\n\n<Row>\n<Column colLg={8}>\n\n![Example of a text area](images/text-input-usage-2.png)\n\n</Column>\n</Row>\n\n### Resize handle\n\nIncluded by default in text area is the `resize` handle. It allows a user to\nmanipulate the field height by making it longer or shorter. The resize handle\nhas no effect on the width of the text area container, it only effects the\nheight. If the user makes the field size shorter than the content inside the\nfield then a vertical scroll will become available.\n\n<Row>\n<Column colLg={8}>\n\n![Example showing the resize handle in text area](images/text-area-usage-resize.png)\n\n</Column>\n</Row>\n\n### Character counter\n\nA character counter can be added to text area to indicate both the number of\ncharacters being entered and the total number of characters allowed. Once the\nmax number of characters is reached the text area should prevent the user from\nentering any additional character and provide messaging to the user that a limit\nhas been met.\n\n<Row>\n<Column colLg={8}>\n\n![Example showing a character counter in text area](images/text-area-usage-counter.png)\n\n</Column>\n</Row>\n\n## References\n\n- Katie Sherwin,\n  [Placeholders in Form Fields Are Harmful](https://www.nngroup.com/articles/form-design-placeholders/)\n  (Nielsen Norman Group, 2018)\n\n## Feedback\n\nHelp us improve this component by providing feedback, asking questions, and\nleaving any other comments on\n[GitHub](https://github.com/carbon-design-system/carbon-website/issues/new?assignees=&labels=feedback&template=feedback.md).\n","fileAbsolutePath":"/home/runner/work/carbon-website/carbon-website/src/pages/components/text-input/usage.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}